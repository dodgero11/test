<div class="custom-modal d-none" id="<%= modalId %>" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content dark-modal-content" style="width: 700px; max-width: 100%; height: 400px;">
            <div class="modal-header d-flex justify-content-between align-items-center">
                <button type="button" class="close-btn text-muted" aria-label="Close" style="position: absolute;" onclick="closeModal()">Cancel</button>
                <h5 class="modal-title text-center" id="<%= modalId %>Label">New Thread</h5>
                </button>
            </div>
            <div class="modal-body">
                <div class="user-info d-flex align-items-center mb-3">
                    <img src="<%= user.avatar || '/icons/profile.svg' %>" alt="User Avatar" class="avatar">
                    <span class="username"><%= user.username %></span>
                </div>
                <textarea class="form-control thread-input" id="content" placeholder="What's new?" rows="3"></textarea>

                <!-- Hiển thị hình ảnh được tải lên -->
                <div id="imagePreview" class="mt-2"></div>

                <div class="icon-options d-flex justify-content-between align-items-center mt-3">
                    <div class="icons-left d-flex">
                        <label for="uploadImage" class="me-2">
                            <i class="bi bi-image"></i>
                        </label>
                        <input type="file" id="uploadImage" accept="image/*" multiple style="display: none;">
                        <i class="bi bi-emoji-smile me-2" onclick="addEmoji()"></i>
                        <i class="bi bi-hash me-2" onclick="addHashtag()"></i>
                        <i class="bi bi-geo-alt" onclick="addLocation()"></i>
                    </div>
                    <button class="btn btn-primary post-btn" id="submitPost" disabled>Post</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Hàm đóng modal (phạm vi toàn cục)
    function closeModal() {
        document.getElementById('<%= modalId %>').classList.add('d-none');
    }

    // Hàm thêm emoji vào nội dung
    function addEmoji() {
        const textarea = document.getElementById('content');
        textarea.value += " 😊";
    }

    // Hàm thêm hashtag vào nội dung
    function addHashtag() {
        const textarea = document.getElementById('content');
        textarea.value += " #";
    }

    // Hàm thêm vị trí vào nội dung
    function addLocation() {
        const textarea = document.getElementById('content');
        textarea.value += " 📍Location";
    }

    // DOMContentLoaded đảm bảo chạy sau khi toàn bộ DOM đã sẵn sàng
    document.addEventListener("DOMContentLoaded", () => {
        const imagePreviewContainer = document.getElementById('imagePreview');
        const imageInput = document.getElementById('uploadImage');

        // Xử lý tải nhiều ảnh lên
        imageInput.addEventListener('change', function (event) {
            const files = Array.from(event.target.files);
            imagePreviewContainer.innerHTML = ''; // Xóa các ảnh cũ
            files.forEach((file) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.alt = 'Preview';
                    img.className = 'img-thumbnail';
                    img.style.maxWidth = '100px';
                    img.style.maxHeight = '100px';
                    imagePreviewContainer.appendChild(img);
                };
                reader.readAsDataURL(file);
            });
        });

        // Kích hoạt nút Post khi nội dung thay đổi
        document.querySelector('.thread-input').addEventListener('input', function () {
            const content = this.value.trim();
            const postBtn = document.getElementById('submitPost');
            postBtn.disabled = !content.length && !imageInput.files.length; // Chỉ kích hoạt khi có nội dung hoặc ảnh
        });

        // Xử lý gửi bài đăng
        document.getElementById('submitPost').addEventListener('click', async function () {
            const content = document.getElementById('content').value.trim();
            const files = Array.from(imageInput.files);
            const formData = new FormData();

            formData.append('content', content);

            // Thêm từng ảnh vào formData
            files.forEach((file) => {
                formData.append('postImages', file);
            });

            try {
                const response = await fetch('/create', {
                    method: 'POST',
                    body: formData,
                    credentials: 'include', // Gửi cookie
                });

                const data = await response.json();
                if (response.ok) {
                    alert('Post created successfully!');
                    location.reload(); // Làm mới trang
                } else {
                    alert('Error: ' + data.message);
                }
            } catch (error) {
                console.error('Error posting thread:', error);
                alert('Failed to create post');
            }
        });
    });
</script>
